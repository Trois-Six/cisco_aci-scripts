#!/usr/bin/env python
'''
Autogenerated code using webarya.py
Original Object Document Input: 
{"totalCount":"1","imdata":[{"infraAccPortP":{"attributes":{"descr":"","dn":"uni/infra/accportprof-c1_lko-lab-int_pro","name":"c1_lko-lab-int_pro","ownerKey":"","ownerTag":""},"children":[{"infraHPortS":{"attributes":{"descr":"","name":"c1_lko-lab-int-sel","ownerKey":"","ownerTag":"","type":"range"},"children":[{"infraRsAccBaseGrp":{"attributes":{"fexId":"101","tDn":"uni/infra/funcprof/accportgrp-c1_lko-lab-intgrp"}}},{"infraPortBlk":{"attributes":{"descr":"","fromCard":"1","fromPort":"17","name":"block1","toCard":"1","toPort":"18"}}}]}}]}}]}
'''


# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.naming
import cobra.mit.request
import cobra.mit.session
import cobra.model.infra
from cobra.internal.codec.xmlcodec import toXMLStr

# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('https://172.31.0.10', 'admin', 'cisco!098')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
# Confirm the dn below is for your top dn
topDn = cobra.mit.naming.Dn.fromString('uni/infra/accportprof-c1_lko-lab-int_pro')
topParentDn = topDn.getParent()
topMo = md.lookupByDn(topParentDn)

# build the request using cobra syntax
infraAccPortP = cobra.model.infra.AccPortP(topMo, ownerKey=u'', name=u'c1_lko-lab-int_pro', descr=u'', ownerTag=u'')
infraHPortS = cobra.model.infra.HPortS(infraAccPortP, ownerKey=u'', type=u'range', name=u'c1_lko-lab-int-sel', descr=u'', ownerTag=u'')
infraRsAccBaseGrp = cobra.model.infra.RsAccBaseGrp(infraHPortS, fexId=u'101', tDn=u'uni/infra/funcprof/accportgrp-c1_lko-lab-intgrp')
infraPortBlk = cobra.model.infra.PortBlk(infraHPortS, name=u'block1', descr=u'', fromPort=u'17', fromCard=u'1', toPort=u'18', toCard=u'1')


# commit the generated code to APIC
print toXMLStr(topMo)
c = cobra.mit.request.ConfigRequest()
c.addMo(topMo)
md.commit(c)